// <auto-generated />
using System;
using DBGoreWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBGoreWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250120125425_addAraba")]
    partial class addAraba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.AdminSettings", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SettingKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SettingValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SettingId");

                    b.ToTable("AdminSettings");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Il")
                        .HasColumnType("longtext")
                        .HasColumnName("il");

                    b.Property<string>("Ilce")
                        .HasColumnType("longtext")
                        .HasColumnName("ilçe");

                    b.Property<string>("Mahalle")
                        .HasColumnType("longtext")
                        .HasColumnName("MahalleKoyAdi");

                    b.HasKey("Id");

                    b.ToTable("il_ilce_mah");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Araba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdresKonumu")
                        .HasColumnType("int");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("MarkaID")
                        .HasColumnType("int");

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.Property<string>("Ozellikleri")
                        .HasColumnType("longtext");

                    b.Property<string>("VersiyonAdi")
                        .HasColumnType("longtext");

                    b.Property<int>("VersiyonID")
                        .HasColumnType("int");

                    b.Property<int>("YilID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Arabalar");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.ArabaResim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArabaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ResimAdi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ResimArabaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ArabaResimleri");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Arsa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<double>("Alan")
                        .HasColumnType("double");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Il")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("IlanTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ilce")
                        .HasColumnType("longtext");

                    b.Property<string>("KonutTuru")
                        .HasColumnType("longtext");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Mahalle")
                        .HasColumnType("longtext");

                    b.Property<int>("SahibId")
                        .HasColumnType("int");

                    b.Property<bool>("SatildiMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tip")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SahibId");

                    b.ToTable("Arsa");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.ArsaResim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArsaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ResimAdi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ResimArsaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ArsaResimleri");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Duyuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Durumu")
                        .HasColumnType("int");

                    b.Property<string>("DuyuruImg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("OlusturanKullanici")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Duyurular");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.EmlakBahce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int?>("Ada")
                        .HasColumnType("int")
                        .HasColumnName("ada");

                    b.Property<int?>("AdresKonumu")
                        .HasColumnType("int")
                        .HasColumnName("adreskonumu");

                    b.Property<short?>("BagceSayisi")
                        .HasColumnType("smallint")
                        .HasColumnName("bagcesayisi");

                    b.Property<short?>("BahceSayisiSatilan")
                        .HasColumnType("smallint")
                        .HasColumnName("bahcesayisisatilan");

                    b.Property<int?>("FiyatPesin")
                        .HasColumnType("int")
                        .HasColumnName("fiyat_pesin");

                    b.Property<int?>("FiyatSatis")
                        .HasColumnType("int")
                        .HasColumnName("fiyat_satis");

                    b.Property<int?>("Hisse")
                        .HasColumnType("int")
                        .HasColumnName("hisse");

                    b.Property<string>("IlanAciklamasi")
                        .HasColumnType("longtext")
                        .HasColumnName("ilanaciklamasi");

                    b.Property<string>("IlanAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ilanadi");

                    b.Property<string>("IlanDurumu")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ilanstatusu");

                    b.Property<int?>("IlanNo")
                        .HasColumnType("int")
                        .HasColumnName("ilanno");

                    b.Property<string>("IlanTuru")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ilanturu");

                    b.Property<int?>("Kapora")
                        .HasColumnType("int")
                        .HasColumnName("kapora");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("kullaniciid");

                    b.Property<short?>("Parsel")
                        .HasColumnType("smallint")
                        .HasColumnName("parsel");

                    b.Property<string>("ParselSorgu")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("parselsorgu");

                    b.Property<string>("TaksitBedeli")
                        .HasColumnType("longtext")
                        .HasColumnName("taksit_bedeli");

                    b.Property<string>("TaksitSayisi")
                        .HasColumnType("longtext")
                        .HasColumnName("taksit_sayisi");

                    b.Property<string>("TaksitliMi")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("taksitlimi");

                    b.Property<DateTime?>("TarihBas")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("tarih_bas");

                    b.Property<DateTime?>("TarihBitis")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("tarih_bitis");

                    b.Property<DateTime?>("TarihTeslim")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("tarih_teslim");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("türü");

                    b.Property<int?>("YuzOlcum")
                        .HasColumnType("int")
                        .HasColumnName("yuzolcum");

                    b.HasKey("Id");

                    b.ToTable("emlak_bahce", (string)null);
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.IlanArsa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<double>("Alan")
                        .HasColumnType("double");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Il")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("IlanTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ilce")
                        .HasColumnType("longtext");

                    b.Property<string>("KonutTuru")
                        .HasColumnType("longtext");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Mahalle")
                        .HasColumnType("longtext");

                    b.Property<int>("SahibId")
                        .HasColumnType("int");

                    b.Property<bool>("SatildiMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tip")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SahibId");

                    b.ToTable("IlanArsalar");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AltKategori")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("altkategori");

                    b.Property<string>("KategoriAd")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("kategoriad");

                    b.HasKey("Id");

                    b.ToTable("kategori");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AbonelikBaslangicTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("AbonelikBitisTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AbonelikStatusu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AbonelikTipi")
                        .HasColumnType("longtext");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirmaUnvani")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Referans")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("SonKullanimTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "User"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "Uye"
                        },
                        new
                        {
                            RoleId = 4,
                            Name = "Bayi"
                        });
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Sahib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Soyad")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sahib");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Arsa", b =>
                {
                    b.HasOne("DBGoreWebApp.Models.Entities.Sahib", "Sahib")
                        .WithMany()
                        .HasForeignKey("SahibId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahib");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.IlanArsa", b =>
                {
                    b.HasOne("DBGoreWebApp.Models.Entities.Sahib", "Sahib")
                        .WithMany()
                        .HasForeignKey("SahibId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahib");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.UserRole", b =>
                {
                    b.HasOne("DBGoreWebApp.Models.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBGoreWebApp.Models.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DBGoreWebApp.Models.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
